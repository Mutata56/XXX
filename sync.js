// –§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–£–Æ –ú–´ –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –ì–õ–û–ë–ê–õ–¨–ù–û
async function syncAllStatuses() {
    const current = getStoredShift();
    const updated = {
        "–í —Ä–∞–±–æ—Ç–µ": [],
        "–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞": [],
        "–†–µ—à–µ–Ω–∞": [],
        "–ù–æ–≤–∞—è": []
    };

    const entries = Object.entries(current).flatMap(([status, items]) =>
        items.map(urlText => ({
            status,
            urlText
        }))
    );

    console.log(`üîÑ –ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é ${entries.length} —Ç–∏–∫–µ—Ç–æ–≤`);

    let i = 0;
    for (const {
            urlText
        }
        of entries) {
        const [url] = urlText.split(' ‚Äì ');
        try {
            const res = await fetch(url);
            if (!res.ok) {
                console.warn(`‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç ${res.status} –¥–ª—è ${url}`);
                continue;
            }

            const html = await res.text();
            const doc = new DOMParser().parseFromString(html, 'text/html');
            const statusEl = doc.querySelector('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
            if (!statusEl) {
                console.warn(`‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${url}`);
                continue;
            }

            const actualStatus = statusEl.innerText.trim();
            let cat = getCategoryByStatus(actualStatus);
            if (!cat) {
                console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å '${actualStatus}' –¥–ª—è ${url}`);
                continue;
            }

            updated[cat].push(urlText);
            console.log(`‚úÖ [${++i}/${entries.length}] ${cat} ‚Üê ${url}`);

        } catch (err) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${url}:`, err);
        }

        await sleep(1000);
    }

    saveStorage(updated);
    console.log('‚úîÔ∏è –°–º–µ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Å—Ç–∞—Ç—É—Å–∞–º');
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π, —á—Ç–æ–±—ã background.js –º–æ–≥ –µ—ë –≤—ã–∑–≤–∞—Ç—å
window.syncAllStatuses = syncAllStatuses;